{"ast":null,"code":"const WS_URL = process.env.REACT_APP_WS_URL || 'ws://localhost:8080';\nclass WebSocketService {\n  constructor() {\n    this.ws = null;\n    this.subscribers = new Map();\n    this.reconnectAttempts = 0;\n    this.maxReconnectAttempts = 5;\n    this.reconnectDelay = 2000;\n  }\n  connect() {\n    try {\n      this.ws = new WebSocket(WS_URL);\n      this.ws.onopen = () => {\n        console.log('WebSocket connected');\n        this.reconnectAttempts = 0;\n      };\n      this.ws.onmessage = event => {\n        try {\n          const data = JSON.parse(event.data);\n          this.notifySubscribers(data);\n        } catch (error) {\n          console.error('Error parsing WebSocket message:', error);\n        }\n      };\n      this.ws.onclose = () => {\n        console.log('WebSocket disconnected');\n        this.attemptReconnect();\n      };\n      this.ws.onerror = error => {\n        console.error('WebSocket error:', error);\n      };\n    } catch (error) {\n      console.error('WebSocket connection error:', error);\n      this.attemptReconnect();\n    }\n  }\n  attemptReconnect() {\n    if (this.reconnectAttempts < this.maxReconnectAttempts) {\n      this.reconnectAttempts++;\n      setTimeout(() => {\n        console.log(`Attempting reconnect ${this.reconnectAttempts}/${this.maxReconnectAttempts}`);\n        this.connect();\n      }, this.reconnectDelay * this.reconnectAttempts);\n    }\n  }\n  subscribe(eventType, callback) {\n    if (!this.subscribers.has(eventType)) {\n      this.subscribers.set(eventType, new Set());\n    }\n    this.subscribers.get(eventType).add(callback);\n    return () => {\n      const callbacks = this.subscribers.get(eventType);\n      callbacks === null || callbacks === void 0 ? void 0 : callbacks.delete(callback);\n    };\n  }\n  notifySubscribers(data) {\n    const {\n      type,\n      payload\n    } = data;\n    const callbacks = this.subscribers.get(type);\n    if (callbacks) {\n      callbacks.forEach(callback => callback(payload));\n    }\n  }\n  send(message) {\n    var _this$ws;\n    if (((_this$ws = this.ws) === null || _this$ws === void 0 ? void 0 : _this$ws.readyState) === WebSocket.OPEN) {\n      this.ws.send(JSON.stringify(message));\n    } else {\n      console.error('WebSocket is not connected');\n    }\n  }\n  disconnect() {\n    if (this.ws) {\n      this.ws.close();\n      this.ws = null;\n    }\n  }\n}\n\n// Create singleton instance\nconst webSocketService = new WebSocketService();\nexport default webSocketService;","map":{"version":3,"names":["WS_URL","process","env","REACT_APP_WS_URL","WebSocketService","constructor","ws","subscribers","Map","reconnectAttempts","maxReconnectAttempts","reconnectDelay","connect","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","notifySubscribers","error","onclose","attemptReconnect","onerror","setTimeout","subscribe","eventType","callback","has","set","Set","get","add","callbacks","delete","type","payload","forEach","send","message","_this$ws","readyState","OPEN","stringify","disconnect","close","webSocketService"],"sources":["/home/joel/code/sep728/smart-lock-frontend/src/services/websocket.js"],"sourcesContent":["const WS_URL = process.env.REACT_APP_WS_URL || 'ws://localhost:8080';\n\nclass WebSocketService {\n    constructor() {\n        this.ws = null;\n        this.subscribers = new Map();\n        this.reconnectAttempts = 0;\n        this.maxReconnectAttempts = 5;\n        this.reconnectDelay = 2000;\n    }\n\n    connect() {\n        try {\n            this.ws = new WebSocket(WS_URL);\n\n            this.ws.onopen = () => {\n                console.log('WebSocket connected');\n                this.reconnectAttempts = 0;\n            };\n\n            this.ws.onmessage = (event) => {\n                try {\n                    const data = JSON.parse(event.data);\n                    this.notifySubscribers(data);\n                } catch (error) {\n                    console.error('Error parsing WebSocket message:', error);\n                }\n            };\n\n            this.ws.onclose = () => {\n                console.log('WebSocket disconnected');\n                this.attemptReconnect();\n            };\n\n            this.ws.onerror = (error) => {\n                console.error('WebSocket error:', error);\n            };\n        } catch (error) {\n            console.error('WebSocket connection error:', error);\n            this.attemptReconnect();\n        }\n    }\n\n    attemptReconnect() {\n        if (this.reconnectAttempts < this.maxReconnectAttempts) {\n            this.reconnectAttempts++;\n            setTimeout(() => {\n                console.log(`Attempting reconnect ${this.reconnectAttempts}/${this.maxReconnectAttempts}`);\n                this.connect();\n            }, this.reconnectDelay * this.reconnectAttempts);\n        }\n    }\n\n    subscribe(eventType, callback) {\n        if (!this.subscribers.has(eventType)) {\n            this.subscribers.set(eventType, new Set());\n        }\n        this.subscribers.get(eventType).add(callback);\n\n        return () => {\n            const callbacks = this.subscribers.get(eventType);\n            callbacks?.delete(callback);\n        };\n    }\n\n    notifySubscribers(data) {\n        const { type, payload } = data;\n        const callbacks = this.subscribers.get(type);\n        if (callbacks) {\n            callbacks.forEach(callback => callback(payload));\n        }\n    }\n\n    send(message) {\n        if (this.ws?.readyState === WebSocket.OPEN) {\n            this.ws.send(JSON.stringify(message));\n        } else {\n            console.error('WebSocket is not connected');\n        }\n    }\n\n    disconnect() {\n        if (this.ws) {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n}\n\n// Create singleton instance\nconst webSocketService = new WebSocketService();\n\nexport default webSocketService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}